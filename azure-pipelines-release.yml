variables:
  AZURE_BUILD: true
  MACOSX_DEPLOYMENT_TARGET: "10.12"  # This should match the -mmacosx-version-min flag in setup.py

trigger:
  tags:
    include:
      - v*

pr: none

jobs:
  - job: 'BuildWheels'
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 10
    displayName: 'Build wheels ::'
    pool:
      vmImage: $(image.name)

    strategy:
      matrix:
        osx - python310:
          image.name: 'macos-latest'
          python.version: '3.10'
          ciwb.build: cp310-macosx_universal2
          ciwb.archs: universal2
        osx - python311:
          image.name: 'macos-latest'
          python.version: '3.11'
          ciwb.build: cp311-macosx_universal2
          ciwb.archs: universal2
        osx - python312:
          image.name: 'macos-latest'
          python.version: '3.12'
          ciwb.build: cp312-macosx_universal2
          ciwb.archs: universal2
        osx - python313:
          image.name: 'macos-latest'
          python.version: '3.13'
          ciwb.build: cp313-macosx_universal2
          ciwb.archs: universal2
        osx - python314:
          image.name: 'macos-latest'
          python.version: '3.14'
          ciwb.build: cp314-macosx_universal2
          ciwb.archs: universal2

        windows - python310:
          image.name: 'windows-latest'
          python.version: '3.10'
          ciwb.build: cp310-win_amd64
          ciwb.archs: AMD64
        windows - python311:
          image.name: 'windows-latest'
          python.version: '3.11'
          ciwb.build: cp311-win_amd64
          ciwb.archs: AMD64
        windows - python312:
          image.name: 'windows-latest'
          python.version: '3.12'
          ciwb.build: cp312-win_amd64
          ciwb.archs: AMD64
        windows - python313:
          image.name: 'windows-latest'
          python.version: '3.13'
          ciwb.build: cp313-win_amd64
          ciwb.archs: AMD64
        windows - python314:
          image.name: 'windows-latest'
          python.version: '3.14'
          ciwb.build: cp314-win_amd64
          ciwb.archs: AMD64

        linux - python310:
          image.name: 'ubuntu-latest'
          python.version: '3.10'
          ciwb.build: cp310-manylinux_x86_64
          ciwb.archs: auto
        linux - python311:
          image.name: 'ubuntu-latest'
          python.version: '3.11'
          ciwb.build: cp311-manylinux_x86_64
          ciwb.archs: auto
        linux - python312:
          image.name: 'ubuntu-latest'
          python.version: '3.12'
          ciwb.build: cp312-manylinux_x86_64
          ciwb.archs: auto
        linux - python313:
          image.name: 'ubuntu-latest'
          python.version: '3.13'
          ciwb.build: cp313-manylinux_x86_64
          ciwb.archs: auto
        linux - python314:
          image.name: 'ubuntu-latest'
          python.version: '3.14'
          ciwb.build: cp314-manylinux_x86_64
          ciwb.archs: auto

    steps:
      - script: env
        displayName: 'List enviromental variables'

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.13'
          architecture: 'x64'
        displayName: 'Use Python 3.13 to run cibuildwheel'

      - script: python -m pip install "cibuildwheel>=3.1"
        displayName: Installing build tools

      - script: python -m cibuildwheel --output-dir dist/
        displayName: 'Build wheel'
        env:
          CIBW_BUILD: $(ciwb.build)
          CIBW_ARCHS: $(ciwb.archs)
          CIBW_BUILD_VERBOSITY: 1

      # Since Python automatically adds `cwd` to `sys.path`, it's important we remove the local folder
      # containing our code from the working directory. Otherwise, the tests will use the local copy
      # instead of the installed package. We can easily achieve this by renaming the source folder.
      - bash: mv openTSNE src
        displayName: 'Remove source files from path'

      - bash: ls -lRh dist
        displayName: 'List built files'

      # We need to install Python, so we can test out the wheel we just built
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'
        displayName: 'Use Python $(python.version)'

      - bash: python -m pip install -v --force-reinstall --find-links=dist/ openTSNE
        displayName: 'Install wheel'

      - script: pip install pynndescent
        condition: ne(variables['python.version'], '3.14')  # numba currently not supported on 3.14
        displayName: 'Install optional dependencies - pynndescent'

      - script: pip install hnswlib
        env:
          HNSWLIB_NO_NATIVE: 1  # -march=native is not available on clang, so just disable it
        displayName: 'Install optional dependencies - hnswlib'

      - bash: pip install pytest
        displayName: 'Install pytest'

      - bash: pip freeze -v
        displayName: 'List packages'

      - script: pytest -v
        timeoutInMinutes: 15
        displayName: 'Run unit tests'

      - task: CopyFiles@2
        condition: eq(variables['Agent.JobStatus'], 'Succeeded')
        inputs:
          contents: dist/**
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        condition: eq(variables['Agent.JobStatus'], 'Succeeded')
        inputs:
          artifactName: 'build'
          pathtoPublish: $(Build.ArtifactStagingDirectory)


  - job: 'sdist'
    timeoutInMinutes: 0
    cancelTimeoutInMinutes: 10
    displayName: 'Package source distribution'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python 3.10'
        inputs:
          versionSpec: '3.10'

      - script: python -m pip install build
        displayName: Installing build tools

      - script: python -m build -v --outdir dist --sdist
        displayName: 'Build sdist'

      - bash: ls -lRh dist
        displayName: 'List built files'

      - bash: python -m pip -v install --no-binary openTSNE --find-links=dist/ openTSNE --no-cache
        displayName: 'Install package'

      - script: pip install pynndescent
        condition: ne(variables['python.version'], '3.14')  # numba currently not supported on 3.14
        displayName: 'Install optional dependencies - pynndescent'

      - script: pip install hnswlib
        displayName: 'Install optional dependencies - hnswlib'

      # Since Python automatically adds `cwd` to `sys.path`, it's important we remove the local folder
      # containing our code from the working directory. Otherwise, the tests will use the local copy
      # instead of the installed package. We can easily achieve this by renaming the source folder.
      - bash: mv openTSNE src
        displayName: 'Remove source files from path'

      - bash: pip install pytest
        displayName: 'Install pytest'

      - bash: pip freeze -v
        displayName: 'List packages'

      - script: pytest -v
        timeoutInMinutes: 15
        displayName: 'Run unit tests'

      - task: CopyFiles@2
        condition: eq(variables['Agent.JobStatus'], 'Succeeded')
        inputs:
          contents: dist/**
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        condition: eq(variables['Agent.JobStatus'], 'Succeeded')
        inputs:
          artifactName: 'build'
          pathtoPublish: $(Build.ArtifactStagingDirectory)
